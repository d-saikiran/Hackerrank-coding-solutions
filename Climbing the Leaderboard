#!/bin/python3

import math
import os
import random
import re
import sys
import operator
import bisect
# Complete the 'climbingLeaderboard' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts following parameters:
#  1. INTEGER_ARRAY ranked
#  2. INTEGER_ARRAY player
#

def climbingLeaderboard(ranked, player):
    # Write your code here
    ranked=list(set(ranked))
    ranked.sort()
    n=len(ranked)
    d={}
    for i in range(len(player)):
        d[i]=player[i]
    d=sorted(d.items(),key=operator.itemgetter(1))
    #print(ranked)
    #print(d)
    for i,v in d:
        j=bisect.bisect_right(ranked,v)
        print(j)
        player[i]=n-(j)+1
    return player
    

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    ranked_count = int(input().strip())

    ranked = list(map(int, input().rstrip().split()))

    player_count = int(input().strip())

    player = list(map(int, input().rstrip().split()))

    result = climbingLeaderboard(ranked, player)

    fptr.write('\n'.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
